0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.10.10
3 info using node@v6.10.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/john/Dropbox/code/macgitrepos/renogy-rover',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/john/.npm/renogy-rover/1.0.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/john/.npm correctMkdir not in flight; initializing
10 info lifecycle renogy-rover@1.0.0~prepublish: renogy-rover@1.0.0
11 silly lifecycle renogy-rover@1.0.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/john/.npm/renogy-rover/1.0.0/package.tgz',
12 verbose tar pack   '/Users/john/Dropbox/code/macgitrepos/renogy-rover' ]
13 verbose tarball /Users/john/.npm/renogy-rover/1.0.0/package.tgz
14 verbose folder /Users/john/Dropbox/code/macgitrepos/renogy-rover
15 verbose addLocalTarball adding from inside cache /Users/john/.npm/renogy-rover/1.0.0/package.tgz
16 verbose correctMkdir /Users/john/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd renogy-rover@1.0.0
18 verbose afterAdd /Users/john/.npm/renogy-rover/1.0.0/package/package.json not in flight; writing
19 verbose correctMkdir /Users/john/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/john/.npm/renogy-rover/1.0.0/package/package.json written
21 silly publish { name: 'renogy-rover',
21 silly publish   version: '1.0.0',
21 silly publish   description: 'renogy rover MPPT controller monitor.',
21 silly publish   main: 'renogy-rover.js',
21 silly publish   scripts: { start: 'node ./renogyapp.js' },
21 silly publish   author: { name: 'MenloParkInnovation LLC' },
21 silly publish   license: 'MIT',
21 silly publish   keywords: [],
21 silly publish   dependencies: { 'modbus-serial': '^6.0.1', serialport: '^4.0.7' },
21 silly publish   readme: '\n# renogy-rover\n\nA pure Javascript driver for the Renogy Rover 20/40 AMP MPPT controller.\n\n[![NPM download](.svg)](npm path)\n[![NPM version](picture.png)]()\n[![Build Status](master)]()\n\nThe Renogy Rover is a Maximum Power Point Tracking (MPPT) solar power\nsystem controller available for 20 or 40 amps. It provides a modbus\nprotocol for monitoring real time or historical data.\n\nThis module allows use of a small computer such as a RaspberryPi to\nremotely monitor a solar power system and communicate with the cloud.\n\nIt uses modbus-serial npm for the low level modbus transactions.\n\n**This package allows monitoring solar power systems.\n\n----\n\n- [What can I do with this module ?](#what-can-i-do-with-this-module-)\n- [Compatibility](#compatibility)\n- [Examples](#examples)\n- [Methods](https://github.com/yaacov/node-modbus-serial/wiki/Methods)\n\n----\n\n#### Install\n\n    npm install renogy-rover\n\n#### What can I do with this module ?\n\nMonitor solar power systems with a RaspberryPi, Linux computer,\nPC, or Mac.\n\n#### Compatibility\n\n###### Functions implemented:\n\n* connect\n\n* getProductModel\n\n* getPanelState\n\n* getBatteryState\n\n* getHistoricalParameters\n\n#### Examples\n\n###### Connect\n\n    var config = {};\n    config.port = port;\n\n    var renogy = new rover.RenogyRover(config);\n\n    renogy.connect(function(error) {\n        // .. connected\n    });\n\n###### Get Product Model\n\n    renogy.getProductModel(function(error, model) {\n        console.log("Renogy Model is: ");\n        console.log(model);\n    });\n\n###### Get Panel State\n\n    renogy.getPanelState(function(error, panelState) {\n        console.log("panelState=");\n        console.log(panelState);\n    });\n\n###### Get Battery State\n\n    renogy.getBatteryState(function(error, batteryState) {\n        console.log("batteryState=");\n        console.log(batteryState);\n    });\n\n###### Get Historical Parameters\n\n    renogy.getHistoricalParameters(function(error, historicalParameters) {\n        console.log("historicalParameters=");\n        console.log(historicalParameters);\n    });\n\n###### Monitoring Utility\n\nexport RENOGY_ROVER_PORT=/dev/someport\n\nexport RENOGY_ROVER_INTERVAL=30\n\nnpm start\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '4da890fe86f68b7a68229330ad9b63b6b218b926',
21 silly publish   _id: 'renogy-rover@1.0.0',
21 silly publish   _shasum: '223cd65290658a5c2a044451f994c1b789c5c719',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name renogy-rover
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'renogy-rover',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'renogy-rover',
26 silly mapToRegistry   name: 'renogy-rover',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/renogy-rover
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/john/.npm/renogy-rover/1.0.0/package.tgz
30 verbose request uri https://registry.npmjs.org/renogy-rover
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 6:41:30 PM
33 verbose request using bearer token for auth
34 verbose request id 612ceb4f2da7a190
35 http request PUT https://registry.npmjs.org/renogy-rover
36 http 403 https://registry.npmjs.org/renogy-rover
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '91',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Wed, 03 Jan 2018 02:41:31 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-sea1027-SEA',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1514947291.732712,VS0,VE311',
37 verbose headers   vary: 'Accept-Encoding, Accept' }
38 verbose request invalidating /Users/john/.npm/registry.npmjs.org/renogy-rover on PUT
39 error publish Failed PUT 403
40 verbose stack Error: You cannot publish over the previously published version 1.0.0. : renogy-rover
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid renogy-rover
43 verbose cwd /Users/john/Dropbox/code/macgitrepos/renogy-rover
44 error Darwin 15.5.0
45 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
46 error node v6.10.2
47 error npm  v3.10.10
48 error code E403
49 error You cannot publish over the previously published version 1.0.0. : renogy-rover
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
